@model API.Models.Employee

<h2>Kendo View</h2>
<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2021.2.616/styles/kendo.common.min.css" />
<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2021.2.616/styles/kendo.default.min.css" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://kendo.cdn.telerik.com/2021.2.616/js/kendo.all.min.js"></script>

<div id="grid"></div>

@section Scripts {
    <script>
        // Define fetchDepartments function outside of document.ready
        function fetchDepartments(callback) {
            $.ajax({
                url: "https://localhost:7192/KendoEmployeeMVC/GetAlldept",
                dataType: "json",
                success: function(deptData) {
                    callback(deptData);
                },
                error: function(xhr, status, error) {
                    console.error("Error fetching department data:", error);
                }
            });
        }

        $(document).ready(function () {
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "https://localhost:7192/KendoEmployeeMVC/getemployee",
                        dataType: "json"
                    },
                    create: {
                        url: "https://localhost:7192/KendoEmployeeMVC/AddEmployee",
                        type: "POST",
                        dataType: "json"
                    },
                    destroy: {
                        url: function (data) {
                            return "https://localhost:7192/KendoEmployeeMVC/Delete/" + data.c_empid;
                        },
                        type: "POST",
                        dataType: "json"
                    },
                    update: {
                        url: "https://localhost:7192/KendoEmployeeMVC/Update",
                        type: "POST",
                        dataType: "json"
                    },
                },
                pageSize: 15,
                schema: {
                    model: {
                        id: "c_empid",
                        fields: {
                            c_empid: { type: "number", editable: false, nullable: false },
                            c_empname: { type: "string", validation: { required: true } },
                            c_dob: { type: "string", validation: { required: true } },
                            c_enpgender: { type: "string", validation: { required: true } },
                            c_shift: { type: "string", validation: { required: true } },
                            c_image: { type: "string" },
                            c_dept_id : { type: "number" }
                        }
                    }
                }
            });

            $("#grid").kendoGrid({
                dataSource: dataSource,
                columns: [
                    { field: "c_empid", title: "Employee id" },
                    { field: "c_empname", title: "Employee Name" },
                    {
                        field: "c_enpgender",
                        title: "Employee Gender",
                        editor: function (container, options) {
                            // Create radio buttons with specific values
                            $('<input type="radio" name="' + options.field + '" value="Male"/> Male<br>').appendTo(container);
                            $('<input type="radio" name="' + options.field + '" value="Female"/> Female<br>').appendTo(container);
                        },
                        template: function (dataItem) {
                            return dataItem.c_enpgender;
                        }
                    },
                    {
                        field: "c_shift",
                        title: "Shift",
                        editor: function (container, options) {
                            var checkboxWrapper = $('<div>').appendTo(container);

                            checkboxWrapper.kendoCheckBoxGroup({
                                items: [
                                    { label: "Morning", value: "Morning" },
                                    { label: "Evening", value: "Evening" }
                                ],
                                layout: "horizontal"
                            });

                            var checkboxGroup = checkboxWrapper.data("kendoCheckBoxGroup");
                            checkboxGroup.value(options.model.c_shift.split(',')); 
                            checkboxGroup.bind("change", function (e) {
                                var selectedFacilities = e.sender.value().join(',');
                                options.model.set("c_shift", selectedFacilities);
                            });
                        }
                    },
                    {
                        field: "c_image",
                        title: "Photo",
                        editor: function (container, options) {
                            $('<input name="' + options.field + '" type="file" id="fileInput" />').appendTo(container);
                            $('<span id="filePathSpan"></span>').appendTo(container);

                            $('#fileInput').change(function () {
                                var fileName = $(this).val().split('\\').pop();
                                $('#filePathSpan').text(fileName);
                                options.model.set("c_image", fileName);
                            });
                        },
                        template: "<img src='#= c_image #' alt='City Photo' style='max-width: 100px; max-height: 100px;'/>"
                    },
                    {
                        field: "c_dept_id",
                        title : "Department",
                        editor: function(container, options) {
                            fetchDepartments(function(deptData) {
                                var dropdown = $('<select name="' + options.field + '" id="' + options.field + '"></select>').appendTo(container);
                                $.each(deptData, function(index, dept) {
                                    dropdown.append($('<option></option>').attr('value', dept.c_deptid).text(dept.c_deptname));
                                });
                            });
                        }
                    },
                    { command: ["edit", "destroy"], title: "&nbsp;", width: "200px" }
                ],
                editable: "popup",
                toolbar: ["create"],
                pageable: true,
                sortable: true,
                filterable: true,
            });

            dataSource.bind("requestEnd", function (e) {
                if (e.type === "create" || e.type === "update" || e.type === "destroy") {
                    // Update dropdown after update operation
                    fetchDepartments(function(deptData) {
                        var dropdown = $("#c_dept_id");
                        dropdown.empty();
                        $.each(deptData, function(index, dept) {
                            dropdown.append($('<option></option>').attr('value', dept.c_deptid).text(dept.c_deptname));
                        });
                    });
                }
            });

            $("#grid").on("click", ".k-grid-cancel-changes", function () {
                dataSource.cancelChanges();
            });
        });
    </script>
}
